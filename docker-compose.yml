services:
  postgresql:
    image: docker.io/bitnami/postgresql:11
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
      - POSTGRESQL_USERNAME=bn_keycloak
      - POSTGRESQL_DATABASE=bitnami_keycloak
    volumes:
      - 'postgresql_data:/bitnami/postgresql'
    networks:
      - deephub-net

  keycloak:
    image: docker.io/bitnami/keycloak:23
    volumes:
      - ./omlox-realm.json:/opt/bitnami/keycloak/data/import/omlox-realm.json:ro
    environment:
      - "KEYCLOAK_ENABLE_HTTPS=false"
      - "KEYCLOAK_EXTRA_ARGS=--import-realm"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://keycloak:8080/realms/omlox/.well-known/openid-configuration" ]
      interval: 10s
      start_period: 60s
    depends_on:
      - postgresql
    ports:
      # make keycloak reachable from host for using the administration console web interface
      - "80:8080"
    networks:
      - deephub-net

  deephub:
    image: flowcate/deephub:2.6.2
    restart: unless-stopped
    read_only: true
    logging:
      driver: "json-file"
      options:
        max-file: "2"
        max-size: "10m"
    environment:
      - DEEPHUB_PORT=7081
      - DEEPHUB_HOST=0.0.0.0
      - DEEPHUB_CORS=true
      - DEEPHUB_REQUIRE_AUTHORIZATION=true
      # work with "direct" connection via the "deephub-net" docker network
      - DEEPHUB_OPENID_CONFIG_URL=http://keycloak:8080/realms/omlox/.well-known/openid-configuration
      - DEEPHUB_OPENID_CLIENT_NAME=deephub-test-client
      - DEEPHUB_LICENSE_KEY=<enter your trial license key here>
      - DEEPHUB_OPENID_SKIP_ISSUER_VERIFICATION=true
      - SQLITE_TMPDIR=/data
    depends_on:
      keycloak:
        condition: service_healthy
    ports:
      - "7081"
    volumes:
      - "./hub-data/:/data"
    networks:
      - deephub-net

  deephub-ui:
    image: flowcate/deephub-ui:2.6.2-nginx-1.29.0
    tty: true
    stdin_open: true
    read_only: true
    logging:
      driver: "json-file"
      options:
        max-file: "2"
        max-size: "10m"
    depends_on:
      - deephub
    restart: unless-stopped
    ports:
      - "8080"
    volumes:
      - "./hub-web/tmp/:/tmp"
      - "./hub-web/nginx/log/:/var/log/nginx"
      - "./hub-web/nginx/cache/:/var/cache/nginx"
      - "./hub-web/nginx/conf.d/:/etc/nginx/conf.d"
      - "./hub-web/data/:/app/deephub-ui-service/data"
    environment:
      - DEEPHUB_ROOT_URL=/deephub
      - NGINX_BASE_HREF=/deephub-ui/
      # "localhost" has to be used here because these variables are used within the client browser and there, keycloak and UI can be reached
      # at "localhost" and not as the "keycloak" name valid within the docker network.
      - DEEPHUB_AUTH_ISSUER=http://localhost/realms/omlox
      # For the communication within the docker network, the ui service also needs the internal address.
      # This variable is only needed in keycloak runs within the same docker network.
      - DEEPHUB_AUTH_ISSUER_ALT_NAME=http://keycloak:8080/realms/omlox
      - DEEPHUB_AUTH_CLIENT_ID=deephub-ui-test-client
      # Skipping the issuer validation should only ever be used for testing! DO NOT USE IN PRODUCTION!
      - DEEPHUB_AUTH_SKIP_ISSUER_VALIDATION=true
    networks:
      - deephub-net

  deephub-apache:
    image: httpd:alpine
    restart: unless-stopped
    read_only: true
    logging:
      driver: "json-file"
      options:
        max-file: "2"
        max-size: "10m"
    depends_on:
      - deephub-ui
    ports:
      - "443:443"
    volumes:
      - "./apache/conf:/usr/local/apache2/conf"
      - "./apache/htdocs:/usr/local/apache2/htdocs"
      - "./apache/logs:/usr/local/apache2/logs"
    networks:
      - deephub-net

volumes:
  postgresql_data:
    driver: local

networks:
  deephub-net:

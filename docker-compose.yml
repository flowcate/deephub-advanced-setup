version: "3.2"
services:
  postgresql:
    image: docker.io/bitnami/postgresql:11
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
      - POSTGRESQL_USERNAME=bn_keycloak
      - POSTGRESQL_DATABASE=bitnami_keycloak
    volumes:
      - 'postgresql_data:/bitnami/postgresql'
    networks:
      - deephub-net

  keycloak:
    image: docker.io/bitnami/keycloak:20
    depends_on:
      - postgresql
    ports:
      # make keycloak reachable from host for using the administration console web interface
      - "80:8080"
    networks:
      - deephub-net

  deephub:
    image: flowcate/deephub:2.2.3
    container_name: deephub-2.2.3-https-auth
    restart: unless-stopped
    read_only: true
    logging:
      driver: "json-file"
      options:
        max-file: "2"
        max-size: "10m"
    environment:
      - DEEPHUB_PORT=7081
      - DEEPHUB_HOST=0.0.0.0
      - DEEPHUB_CORS=true
      - DEEPHUB_REQUIRE_AUTHORIZATION=true
      # work with "direct" connection via the "deephub-net" docker network
      - DEEPHUB_OPENID_CONFIG_URL=http://keycloak:8080/realms/omlox/.well-known/openid-configuration
      - DEEPHUB_OPENID_CLIENT_NAME=deephub-test-client
      - DEEPHUB_LICENSE_KEY=240350c6-5b89-44e6-9b74-584230448abf
      - SQLITE_TMPDIR=/data
    depends_on:
      - keycloak
    ports:
      - "7081"
    volumes:
      - "./hub-data/:/data"
    networks:
      - deephub-net

  deephub-ui:
    image: flowcate/deephub-ui:2.2.3
    container_name: deephub-ui-2.2.3-https-auth
    tty: true
    stdin_open: true
    read_only: true
    logging:
      driver: "json-file"
      options:
        max-file: "2"
        max-size: "10m"
    depends_on:
      - deephub
    restart: unless-stopped
    ports:
      - "8080"
    volumes:
      - "./hub-web/:/tmp/run"
      - "./hub-web/nginx/log/:/var/log/nginx"
      - "./hub-web/nginx/cache/:/var/cache/nginx"
      - "./hub-web/nginx/webapp/:/webapp"
    environment:
      - DOCKER_BASE_URL=/deephub/v1
      - DOCKER_ROOT_URL=/deephub
      - DOCKER_WEBSOCKET_URL=
      - DOCKER_APP_BASE_HREF=/deephub-ui/
      - DOCKER_MAP_UPDATES_PER_SECOND=10
      - DOCKER_USE_AUTH=true
      # "localhost" has to be used here because these variables are used within the client browser and there, keycloak and UI can be reached
      # at "localhost" and not as the "keycloak" name valid within the docker network.
      - DOCKER_AUTH_ISSUER=http://localhost/realms/omlox
      - DOCKER_AUTH_REDIRECT_URI=https://localhost/deephub-ui/
      - DOCKER_AUTH_CLIENT_ID=deephub-ui-test-client
    networks:
      - deephub-net

  deephub-apache:
    image: httpd:alpine
    container_name: deephub-apache-2.2.3-https-auth
    restart: unless-stopped
    read_only: true
    logging:
      driver: "json-file"
      options:
        max-file: "2"
        max-size: "10m"
    depends_on:
      - deephub-ui
    ports:
      - "443:443"
    volumes:
      - "./apache/conf:/usr/local/apache2/conf"
      - "./apache/htdocs:/usr/local/apache2/htdocs"
      - "./apache/logs:/usr/local/apache2/logs"
    networks:
      - deephub-net

volumes:
  postgresql_data:
    driver: local

networks:
  deephub-net:
